@model CryptoWallet.Models.Crypto.SellCryptoModel

@{
     ViewBag.Title = "Sell Crypto";
}

@if (TempData["SuccessMessage"] != null)
{
     <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
     <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

@if (!ViewData.ModelState.IsValid)
{
     <div class="alert alert-danger">
          <ul>
               @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
               {
                    <li>@error.ErrorMessage</li>
               }
          </ul>
     </div>
}

<div class="section-title text-center">
     <div class="breadcrumbs">
          <span class="item"><a href="/">Home /</a></span>
          <span class="item">Sell Crypto</span>
     </div>
     <h2>Sell your Crypto</h2>
</div>

<div class="container">
     <form asp-action="Index" method="post">
          @Html.AntiForgeryToken()
          <div class="product-item border-set-bold border-rounded-10 py-5 px-4">
               <div class="row align-items-center">
                    <div class="col-md-4">
                         <p class="mb-3"><strong>Crypto Symbol</strong></p>
                         <p class="mb-3"><strong>Amount</strong></p>
                         <p class="mb-3"><strong>Rate</strong></p>
                    </div>

                    <div class="col-md-4">
                         <select asp-for="CryptoSymbol" name="CryptoSymbol" id="CryptoSymbol" class="form-control text-white mb-4"
                                 style="width: 75%; color: #44e5ae; background-color: #1a1a1a; border: 2px solid white;"
                                 onchange="fetchRecommendedPrice()">
                              <option value="">Select a cryptocurrency</option>
                              <option value="BTC">BTC</option>
                              <option value="ETH">ETH</option>
                              <option value="LTC">LTC</option>
                              <option value="XRP">XRP</option>
                              <option value="ADA">ADA</option>
                         </select>
                         <span asp-validation-for="CryptoSymbol" class="text-danger"></span>

                         <input asp-for="Amount" name="Amount" class="form-control text-white mb-4"
                                placeholder="Enter amount"
                                style="width: 75%; color: #44e5ae; background-color: #1a1a1a; border: 2px solid white;"
                                onfocus="this.style.setProperty('background-color', '#2a2a2a', 'important'); this.style.setProperty('border-color', '#44e5ae', 'important');"
                                onblur="this.style.setProperty('background-color', '#1a1a1a', 'important'); this.style.setProperty('border-color', 'white', 'important');" />
                         <span asp-validation-for="Amount" class="text-danger"></span>

                         <input asp-for="Rate" id="RateInput" name="Rate" class="form-control text-white mb-4"
                                placeholder="Enter rate"
                                style="width: 75%; color: #44e5ae; background-color: #1a1a1a; border: 2px solid white;"
                                onfocus="this.style.setProperty('background-color', '#2a2a2a', 'important'); this.style.setProperty('border-color', '#44e5ae', 'important');"
                                onblur="this.style.setProperty('background-color', '#1a1a1a', 'important'); this.style.setProperty('border-color', 'white', 'important');" />
                         <span asp-validation-for="Rate" class="text-danger"></span>
                    </div>

                    <div class="col-md-4">
                         <div class="d-flex align-items-center">
                              <p id="recommendedPrice" class="me-3">
                                   <strong>Recommended price for <span id="priceSymbol">?</span>: <span id="priceValue">-</span> USD</strong>
                              </p>
                              <button type="button" id="usePriceBtn" class="btn btn-sm btn-outline-success" onclick="useRecommendedPrice()">Use</button>
                         </div>
                    </div>
               </div>

               <div class="row mt-4">
                    <div class="col-12 d-flex justify-content-center">
                         <input type="hidden" name="Username" value="@Session["UserName"]" />
                         <button type="submit" class="btn btn-outline-accent btn-medium btn-rounded text-uppercase">Create Listing</button>
                    </div>
               </div>
          </div>
     </form>
</div>

<script>
    let latestPrice = null;

    async function fetchRecommendedPrice() {
        const symbol = document.getElementById("CryptoSymbol").value;
        const lowerSymbol = symbol.toLowerCase();
        const priceSymbolSpan = document.getElementById("priceSymbol");
        const priceValueSpan = document.getElementById("priceValue");

        priceSymbolSpan.innerText = symbol || "?";
        priceValueSpan.innerText = "Loading...";

        if (!symbol) {
            latestPrice = null;
            return;
        }

        const url = "https://cdn.jsdelivr.net/npm/" + @Html.Raw("\"@fawazahmed0\"") + "/currency-api@latest/v1/currencies/" + lowerSymbol + ".json";

        try {
            const response = await fetch(url);
            const data = await response.json();

            const price = data[lowerSymbol]?.usd;
            if (price) {
                latestPrice = price;
                priceValueSpan.innerText = price;
            } else {
                latestPrice = null;
                priceValueSpan.innerText = "Not available";
            }
        } catch (err) {
            console.error("Error fetching price:", err);
            latestPrice = null;
            priceValueSpan.innerText = "Error";
        }
    }

    function useRecommendedPrice() {
        if (latestPrice !== null) {
            document.getElementById("RateInput").value = latestPrice;
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        fetchRecommendedPrice();
    });
</script>
